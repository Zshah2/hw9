using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Windows.Forms;

namespace _9._2VendorDictionary1
{
    public partial class Form1 : Form
    {
        private Dictionary<string, string> vendorPhones = new Dictionary<string, string>();

        public Form1()
        {
            InitializeComponent();
            LoadVendors();
            PopulateComboBox();
        }

        private void LoadVendors()
        {
            try
            {
                string[] lines = File.ReadAllLines("C:\\Users\\zobai\\source\\repos\\9-1VendorList\\Vendor.txt");
                foreach (string line in lines)
                {
                    string[] vendorInfo = line.Split(',');
                    if (vendorInfo.Length >= 5)
                    {
                        vendorPhones.Add(vendorInfo[0], vendorInfo[4]);
                    }
                    else
                    {
                        // Log or handle the case where the line doesn't contain enough information
                        // For example, you can ignore the line or display an error message
                        Console.WriteLine($"Error: Insufficient information in line: {line}");
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error reading file: {ex.Message}");
            }
        }

        private void PopulateComboBox()
        {
            // Populate ComboBox with vendor names
            comboBoxVendors.Items.AddRange(vendorPhones.Keys.ToArray());
            comboBoxVendors.Sorted = true;
        }

        private void button1_Click(object sender, EventArgs e)
        {
            // Handle button click event

            // Display the selected vendor's information when the button is clicked
            string selectedVendor = comboBoxVendors.SelectedItem?.ToString();
            if (selectedVendor != null && vendorPhones.ContainsKey(selectedVendor))
            {
                string phoneNumber = vendorPhones[selectedVendor];
                listBoxResults.Items.Clear();
                listBoxResults.Items.Add($"Name: {selectedVendor}");
                listBoxResults.Items.Add($"Phone Number: {phoneNumber}");
            }
            else
            {
                listBoxResults.Items.Clear();
                listBoxResults.Items.Add("Vendor not found.");
            }
        }
    }
}
        
